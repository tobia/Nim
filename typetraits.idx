name	typetraits.html#name,typedesc	typetraits: name(t: typedesc): string	
arity	typetraits.html#arity,typedesc	typetraits: arity(t: typedesc): int	
genericHead	typetraits.html#genericHead,typedesc	typetraits: genericHead(t: typedesc): typedesc	
stripGenericParams	typetraits.html#stripGenericParams,typedesc	typetraits: stripGenericParams(t: typedesc): typedesc	
copyMem	typetraits.html#copymem_1	Module typetraits	
blob	typetraits.html#blob_1	Module typetraits	
supportsCopyMem	typetraits.html#supportsCopyMem,typedesc	typetraits: supportsCopyMem(t: typedesc): bool	
isNamedTuple	typetraits.html#isNamedTuple,typedesc	typetraits: isNamedTuple(T: typedesc): bool	
distinctBase	typetraits.html#distinctBase,typedesc	typetraits: distinctBase(T: typedesc): typedesc	
lenTuple	typetraits.html#lenTuple.m	typetraits: lenTuple(t: tuple): int	
lenTuple	typetraits.html#lenTuple.m,typedesc[]	typetraits: lenTuple(t: typedesc[tuple]): int	
get	typetraits.html#get.t,typedesc[],	typetraits: get(T: typedesc[tuple]; i: static int): untyped	
genericParams	typetraits.html#genericParams.m,typedesc	typetraits: genericParams(T: typedesc): untyped	
